.1805       - Enable 1805 mode
.arch=elf2k - Set Elf2000 memory model
.arch=mchi  - Set Membership Card high-RAM memory model
.arch=mchip - Set MemberCHIP card memory model
.arch=mclo  - Set Membership Card low-RAM memory model
.arch=melf  - Set Micro/Elf memory model
.arch=pev   - Set Pico/Elf memory model
.arch=pev2  - Set Pico/Elf V2 memory model
.binary     - Output as binary
.intel      - Output as Intel hex
.list       - Enable show list
.rcs        - Output as Rcs hex
.sym        - Show symbols
.link line  - Pass 'line' to linker
.suppress   - Suppress further byte output
.op "opcode","arglist","translation"
   arglist:
     B - byte
     N - nybble
     W - word
     R - R-register

Command line switches:
  -1805         - Enable 1805 mode
  -b            - Output in binary
  -r            - Output in RCS hex
  -i            - Output in Intel hex
  -l            - Show assembly list
  -L            - Create .lst file
  -s            - Show symbols
  -melf         - Set Micro/Elf memory model
  -pev          - Set Pico/Elf memory model
  -pev2         - Set Pico/Elf V2 memory model
  -elf2k        - Set Elf2000 memory model
  -mclo         - Set Membership Card low RAM memory model
  -mchi         - Set Membership Card high RAM memory model
  -mchip        - Set MemberChip Card memory model
  -ram=low-high - Set explicit RAM region
  -rom=how-high - Set explicit ROM region

Evaluator variables:
[month]         - Build month
[day]           - Build day
[year]          - Build year
[hour]          - Build hour
[minute]        - Build minute
[second]        - Build second
[build]         - Build number

Preprocessor:
  #include filename
  #define symbol value
  #undef symbol
  #if expr
  #ifdef symbol
  #ifndef symbol
  #else
  #endif
  #error text

Pseudo ops:
  extrn label   - Define external label
  public label  - Define label as public
  db  bb,bb,... - Define bytes
  dw  ww,ww,... - Define words
  dd  dd,dd,... - Define double words
  df  ff,ff,... - Define floating point data
  ds  ww        - Define storage
  equ expr      - Set label to value
  org expr      - Set assembly address
  proc label    - Begin relocatable procedure
  endp          - End of relocatable procedure
  ver           - Build standard Elf/OS VER header
  ever          - Build extended Elf/OS VER header
  eever         - Build enhanced Elf/OS VER header

Sample opcode macros:
.op "PUSH","N","9$1 73 8$1 73"
.op "POP","N","60 72 A$1 F0 B$1"
.op "CALL","W","D4 H1 L1"
.op "RTN","","D5"
.op "MOV","NR","9$2 B$1 8$2 A$1"
.op "MOV","NW","F8 H2 B$1 F8 L2 A$1"
.op "SUB16","NR","8$2 52 8$1 F7 A$1 9$2 52 9$1 77 B$1"
.op "SHL16","N","8$1 FE A$1 9$1 7E B$1"
.op "SHR16","N","9$1 F6 B$1 8$1 76 A$1"
.op "ADD16","NW","8$1 FC L2 A$1 9$1 7C H2 B$1"
.op "SUB16","NW","8$1 FF L2 A$1 9$1 7F H2 B$1"
.op "CLC","","fc 00"
.op "STC","","ff 00"

