.1805      - Enable 1805 mode
.list      - Enable show list
.sym       - Show symbols
.op "opcode","arglist","translation"
   arglist:
     B - byte
     N - nybble
     W - word
     R - R-register

Command line switches:
  -1805         - Enable 1805 mode
  -b            - Output in binary
  -r            - Output in RCS hex
  -i            - Output in Intel hex
  -l            - Show assembly list
  -L            - Create .lst file
  -s            - Show symbols
  -melf         - Set Micro/Elf memory model
  -pev          - Set Pico/Elf memory model
  -pev2         - Set Pico/Elf V2 memory model
  -elf2k        - Set Elf2000 memory model
  -mclo         - Set Membership Card low RAM memory model
  -mchi         - Set Membership Card high RAM memory model
  -mchip        - Set MemberChip Card memory model
  -ram=low-high - Set explicit RAM region
  -rom=how-high - Set explicit ROM region

Preprocessor:
  #include filename
  #define symbol value
  #undef symbol
  #if expr
  #ifdef symbol
  #ifndef symbol
  #else
  #endif

Pseudo ops:
  db  bb,bb,... - Define bytes
  dw  ww,ww,... - Define words
  dd  dd,dd,... - Define double words
  ds  ww        - Define storage
  equ expr      - Set label to value
  org expr      - Set assembly address
  push reg      - Push 16-bit R-register
  pop  rg       - Pop 16-bit R-register

Sample opcode macros:
.op "PUSH","N","9$1 73 8$1 73"
.op "POP","N","60 72 A$1 F0 B$1"
.op "CALL","W","D4 H1 L1"
.op "RTN","","D5"
.op "MOV","NR","9$1 B$2 8$1 A$2"
.op "MOV","NW","F8 H2 B$1 F8 L2 A$1"

